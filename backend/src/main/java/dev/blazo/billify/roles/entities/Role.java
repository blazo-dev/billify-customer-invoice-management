package dev.blazo.billify.roles.entities;

import com.fasterxml.jackson.annotation.JsonInclude;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.experimental.SuperBuilder;

import static com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT;

/**
 * Represents a Role entity within the system.
 * This entity is used to manage user roles, which define the permissions associated with each role.
 * It is mapped to the "roles" table in the database, where each role has a unique identifier,
 * a name, and permissions associated with it.
 *
 * @author Bryan Lazo
 * @version 1.0.0
 * @since 4/26/2025
 */
@Data
@SuperBuilder
@NoArgsConstructor
@AllArgsConstructor
@JsonInclude(NON_DEFAULT)  // Only include non-default fields in the serialized JSON response
@Entity(name = "roles")  // Maps the entity to the 'roles' table in the database
public class Role {

    /**
     * Unique identifier for the role.
     * This field is auto-generated by the database with an auto-incremented value.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The name of the role, such as "ADMIN", "USER", etc.
     * This field is required, has a maximum length of 50 characters and must be unique.
     */
    @NotEmpty(message = "Role name is required")
    @Size(max = 50, message = "Role name must be at most 50 characters")
    @Column(nullable = false, unique = true)
    private String name;

    /**
     * Permissions associated with this role.
     * This field specifies the actions or rights granted to users assigned this role.
     */
    @NotEmpty(message = "Permissions are required")
    @Size(max = 255, message = "Permissions must be at most 255 characters")
    @Column(nullable = false)
    private String permission;
}
